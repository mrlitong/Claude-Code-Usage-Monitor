name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    name: Test on Python ${{ matrix.python-version }} (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
#        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --extra test --extra dev

      - name: Run unit tests
        run: uv run pytest src/tests/ -v --tb=short --cov=claude_monitor --cov-report=xml --cov-report=term-missing

      - name: Upload coverage reports to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}


  # security:
  #   runs-on: ubuntu-latest
  #   name: Security scanning
  #   strategy:
  #     matrix:
  #       python-version: ["3.11"]
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Install uv
  #       uses: astral-sh/setup-uv@v4
  #       with:
  #         version: "latest"
  #
  #     - name: Set up Python ${{ matrix.python-version }}
  #       run: uv python install ${{ matrix.python-version }}
  #
  #     - name: Install dependencies
  #       run: uv sync --extra security --extra dev
  #
  #     - name: Run Bandit security linter
  #       run: uv run bandit -r src/claude_monitor -f json -o bandit-report.json
  #
  #     - name: Run Safety dependency scanner
  #       run: uv run safety check --json --output safety-report.json || true
  #
  #     - name: Upload security artifacts
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: security-reports
  #         path: |
  #           bandit-report.json
  #           safety-report.json

  # performance:
  #   runs-on: ubuntu-latest
  #   name: Performance benchmarks
  #   strategy:
  #     matrix:
  #       python-version: ["3.11"]
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Install uv
  #       uses: astral-sh/setup-uv@v4
  #       with:
  #         version: "latest"
  #
  #     - name: Set up Python ${{ matrix.python-version }}
  #       run: uv python install ${{ matrix.python-version }}
  #
  #     - name: Install dependencies
  #       run: uv sync --extra performance --extra dev
  #
  #     - name: Run performance benchmarks
  #       run: uv run pytest src/tests/ -m benchmark --benchmark-json=benchmark-results.json
  #
  #     - name: Upload benchmark results
  #       uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: benchmark-results
  #         path: benchmark-results.json
